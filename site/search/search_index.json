{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introdu\u00e7\u00e3o","text":"<p>Esse projeto visa criar uma plataforma no formato de e-commerce voltada para a venda de quadros e artigos de artesanato, permitindo que o cliente venda e divulgue seus produtos.</p>"},{"location":"repositorios/","title":"Reposit\u00f3rios do Projeto","text":"<p>O projeto foi dividido em 2 resposit\u00f3rios, que podem ser acessados nos links abaixo:</p> <ul> <li>Frontend</li> <li>Backend</li> </ul> <p>Por serem privados, \u00e9 necess\u00e1rio solicitar acesso ao Gabriel Cabral</p>"},{"location":"arquitetura/documento-arquitetura/","title":"Documento de Arquitetura de Sofware","text":""},{"location":"arquitetura/documento-arquitetura/#1-introducao","title":"1. Introdu\u00e7\u00e3o","text":""},{"location":"arquitetura/documento-arquitetura/#11-finalidade","title":"1.1. Finalidade","text":"<p>Este documento oferece uma vis\u00e3o geral arquitetural abrangente do sistema, utilizando diferentes perspectivas arquiteturais. O objetivo \u00e9 capturar e comunicar as decis\u00f5es arquiteturais significativas tomadas em rela\u00e7\u00e3o ao sistema.</p>"},{"location":"arquitetura/documento-arquitetura/#12-escopo","title":"1.2. Escopo","text":"<p>Este documento serve como guia para a constru\u00e7\u00e3o arquitetural do software, abordando os principais pontos desenvolvidos na arquitetura do projeto. A partir deste resumo, \u00e9 poss\u00edvel se orientar sobre outros documentos detalhados da arquitetura do projeto, proporcionando uma vis\u00e3o clara e completa de cada tema.</p>"},{"location":"arquitetura/documento-arquitetura/#2-representacao-arquitetural","title":"2. Representa\u00e7\u00e3o Arquitetural","text":""},{"location":"arquitetura/documento-arquitetura/#tecnologias","title":"Tecnologias","text":""},{"location":"arquitetura/documento-arquitetura/#frontend","title":"Frontend","text":"<ul> <li> <p>Javascript: JavaScript \u00e9 uma linguagem de programa\u00e7\u00e3o de alto n\u00edvel e din\u00e2mica, amplamente utilizada no desenvolvimento web. Desenvolvida inicialmente pela Netscape, tornou-se uma das principais tecnologias da web, ao lado de HTML e CSS. JavaScript permite a cria\u00e7\u00e3o de p\u00e1ginas web interativas, manipulando o DOM (Document Object Model) e permitindo a integra\u00e7\u00e3o de APIs externas. \u00c9 uma linguagem interpretada que segue o padr\u00e3o ECMAScript, sendo flex\u00edvel e poderosa, com tipagem din\u00e2mica e suporte a programa\u00e7\u00e3o orientada a objetos, funcional e imperativa. Sua popularidade e versatilidade a tornam essencial para o desenvolvimento moderno de aplica\u00e7\u00f5es web.</p> </li> <li> <p>React: O React \u00e9 um conjunto de bibliotecas open source voltados para a cria\u00e7\u00e3o de UIs interativas de forma mais f\u00e1cil. Toda a l\u00f3gica do React \u00e9 escrita em JavaScript, facilitando a passagem de dados ao longo da aplica\u00e7\u00e3o. Essa tecnologia foi escolhida por conta da quantidade de conte\u00fado dispon\u00edvel na internet, facilitando o treinamento e aprendizado da equipe. Outro fator importante \u00e9 a comunidade, que est\u00e1 sempre ativa para ajudar em poss\u00edveis d\u00favidas.</p> </li> <li> <p>Next.js: O Next.js \u00e9 uma estrutura da web de desenvolvimento front-end React de c\u00f3digo aberto criada por Vercel que permite funcionalidades como renderiza\u00e7\u00e3o do lado do servidor e gera\u00e7\u00e3o de sites est\u00e1ticos para aplicativos da web baseados em React. \u00c9 uma estrutura pronta para produ\u00e7\u00e3o que permite que os desenvolvedores criem rapidamente sites est\u00e1ticos e din\u00e2micos e \u00e9 amplamente usada por muitas grandes empresas.</p> </li> </ul>"},{"location":"arquitetura/documento-arquitetura/#backend","title":"Backend","text":"<ul> <li> <p>Python: Python \u00e9 uma linguagem de programa\u00e7\u00e3o de alto n\u00edvel, interpretada de script, imperativa, orientada a objetos, funcional, de tipagem din\u00e2mica e forte.</p> </li> <li> <p>Django: Django \u00e9 um framework para desenvolvimento r\u00e1pido para web, escrito em Python, que utiliza o padr\u00e3o model-template-view. Tamb\u00e9m foi utilizado o banco de dados gerado pelo o Django que utiliza o SQL.</p> </li> </ul>"},{"location":"arquitetura/documento-arquitetura/#3-metas-e-restricoes-da-arquitetura","title":"3. Metas e Restri\u00e7\u00f5es da Arquitetura","text":""},{"location":"arquitetura/documento-arquitetura/#31-restricoes","title":"3.1. - Restri\u00e7\u00f5es","text":"<ul> <li>O software deve ser desenvolvido com as tecnologias definidas;</li> <li>O software deve rodar nos navegadores: Web Firefox, Google Chrome, Edge e Opera;</li> <li>O ambiente de desenvolvimento do software deve funcionar tanto em Windows quanto em Linux;</li> <li>Para utilizar o software \u00e9 necess\u00e1rio estar conectado \u00e0 internet;</li> </ul>"},{"location":"arquitetura/documento-arquitetura/#32-metas","title":"3.2. - Metas","text":"<ul> <li>Portabilidade - Deve ser poss\u00edvel utilizar a plataforma em qualquer navegador web;</li> <li>Usabilidade - O software deve possuir alta aprendibilidade e inteligibilidade, para que atenda aos requisitos elicitados;</li> <li>Manutenibilidade - O c\u00f3digo e as documenta\u00e7\u00f5es realizadas pelo desenvolvedor devem atingir um alto n\u00edvel de qualidade, seguindo os padr\u00f5es de projeto e bibliografia, onde a manuten\u00e7\u00e3o seja f\u00e1cil de ser realizada.</li> </ul>"},{"location":"arquitetura/documento-arquitetura/#4-visao-logica","title":"4. Vis\u00e3o L\u00f3gica","text":"<p>A vis\u00e3o l\u00f3gica descreve como o sistema \u00e9 estruturado, em termos de unidade e implementa\u00e7\u00e3o. Mostra como est\u00e1 a organiza\u00e7\u00e3o conceitual do sistema em termos de camadas, pacotes, classes e interfaces. O relacionamento entre os elementos mostra as depend\u00eancias, as realiza\u00e7\u00f5es de interface, os relacionamentos parte-todo e assim por diante.</p>"},{"location":"arquitetura/documento-arquitetura/#41-diagrama-de-classes","title":"4.1 Diagrama de Classes","text":"<p>Em constru\u00e7\u00e3o</p>"},{"location":"arquitetura/documento-arquitetura/#5-visao-de-deploy","title":"5. Vis\u00e3o de Deploy","text":"<p>Descreve como a aplica\u00e7\u00e3o \u00e9 disponibilizada para uso, seja em ambiente de desenvolvimento, para testes ou em produ\u00e7\u00e3o. O deploy ser\u00e1 feito utilizando AWS para o backend e Vercel para o frontend.</p>"},{"location":"arquitetura/documento-arquitetura/#6-visao-de-implementacao","title":"6. Vis\u00e3o de implementa\u00e7\u00e3o","text":""},{"location":"arquitetura/documento-arquitetura/#61-visao-geral","title":"6.1. Vis\u00e3o Geral","text":"<p>Descreve como os artefatos de desenvolvimento est\u00e3o organizados no sistema de arquivos, incluindo arquivos e diret\u00f3rios relevantes, bem como itens de configura\u00e7\u00e3o. Isso abrange tanto os artefatos de desenvolvimento, como c\u00f3digo-fonte e scripts, quanto os artefatos de implanta\u00e7\u00e3o, como pacotes e execut\u00e1veis necess\u00e1rios para colocar o software em produ\u00e7\u00e3o. Essa vis\u00e3o \u00e9 opcional dentro da abordagem das Vis\u00f5es 4+1, que se referem \u00e0s diferentes perspectivas arquiteturais de um sistema. A inclus\u00e3o dessa vis\u00e3o pode ajudar a facilitar a navega\u00e7\u00e3o e a manuten\u00e7\u00e3o do projeto, proporcionando uma melhor compreens\u00e3o da estrutura dos arquivos e diret\u00f3rios.</p>"},{"location":"arquitetura/documento-arquitetura/#62-diagrama-de-classes","title":"6.2. Diagrama de Classes","text":"<p>O Diagrama de Classes \u00e9 uma representa\u00e7\u00e3o da estrutura e rela\u00e7\u00f5es das classes que servem de modelo para os objetos. Consiste em um conjunto de objetos com as mesmas caracter\u00edsticas. Dessa forma, consegue-se identificar os objetos e agrup\u00e1-los, de forma a encontrar suas respectivas classes.</p>"},{"location":"arquitetura/documento-arquitetura/#7-tamanho-e-desempenho","title":"7. Tamanho e Desempenho","text":""},{"location":"arquitetura/documento-arquitetura/#71-visao-geral","title":"7.1 Vis\u00e3o Geral","text":"<p>Descri\u00e7\u00e3o do desempenho e das caracter\u00edsticas do software que impactam na arquitetura de software</p>"},{"location":"arquitetura/documento-arquitetura/#72-requisitos-minimos","title":"7.2 Requisitos M\u00ednimos","text":"<ul> <li>\u00c9 necess\u00e1rio possuir conex\u00e3o com a internet;</li> <li>Navegador com suporte a HTML5, CSS e JavaScript</li> <li>Para desenvolvimento possuir sistema operacional Windows ou Linux</li> </ul> Data Vers\u00e3o Descri\u00e7\u00e3o Autor(es) 07/04/2025 1.0 Iniciando a cria\u00e7\u00e3o da modelagem de arquitetura Gabrie Cabral"},{"location":"planejamento/requisitos/","title":"Requisitos","text":"<p>Ap\u00f3s an\u00e1lise superficial, o desenvolvedor definiu os seguintes requisitos:</p>"},{"location":"planejamento/requisitos/#requisitos-funcionais","title":"Requisitos Funcionais","text":"ID Descri\u00e7\u00e3o RF01 Deve ser poss\u00edvel cadastrar produtos na plataforma RF02 Deve ser poss\u00edvel visualizar os produtos cadastrados RF03 Deve ser poss\u00edvel adicionar e remover produtos no carrinho RF04 Deve ser poss\u00edvel finalizar a compra dos produtos no carrinho RF05 Deve ser poss\u00edvel realizar login e logout na plataforma RF06 Deve ser poss\u00edvel cadastrar um novo usu\u00e1rio (cliente) RF07 Deve ser poss\u00edvel recuperar a senha por e-mail RF08 Deve ser poss\u00edvel filtrar e pesquisar produtos por nome, categoria, etc. RF09 Deve ser poss\u00edvel visualizar os detalhes de um produto RF10 Deve ser poss\u00edvel selecionar a quantidade de itens ao adicionar no carrinho RF11 Deve ser poss\u00edvel acompanhar o status do pedido (ex: em processamento) RF12 Deve ser poss\u00edvel cadastrar formas de pagamento (ex: cart\u00e3o, pix) RF13 Deve ser poss\u00edvel o administrador gerenciar produtos (editar/excluir) RF14 Deve ser poss\u00edvel o administrador visualizar pedidos realizados RF15 Deve ser poss\u00edvel enviar notifica\u00e7\u00e3o por e-mail ap\u00f3s compra realizada"}]}